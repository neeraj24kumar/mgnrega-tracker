{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const LocationContext=/*#__PURE__*/createContext();export const useLocation=()=>{const context=useContext(LocationContext);if(!context){throw new Error('useLocation must be used within a LocationProvider');}return context;};export const LocationProvider=_ref=>{let{children}=_ref;const[userLocation,setUserLocation]=useState(null);const[detectedDistrict,setDetectedDistrict]=useState(null);const[isDetecting,setIsDetecting]=useState(false);const[permissionDenied,setPermissionDenied]=useState(false);// Detect user's location and find district\nconst detectLocation=async()=>{if(!navigator.geolocation){toast.error('Geolocation is not supported by this browser');return;}setIsDetecting(true);setPermissionDenied(false);try{const position=await new Promise((resolve,reject)=>{navigator.geolocation.getCurrentPosition(resolve,reject,{enableHighAccuracy:true,timeout:10000,maximumAge:300000// 5 minutes\n});});const{latitude,longitude}=position.coords;setUserLocation({latitude,longitude});// Find the nearest district\nconst district=await findNearestDistrict(latitude,longitude);if(district){setDetectedDistrict(district);toast.success(\"Detected your location: \".concat(district.district_name,\", \").concat(district.state_name));}else{toast.error('Could not determine your district from location');}}catch(error){console.error('Location detection error:',error);if(error.code===error.PERMISSION_DENIED){setPermissionDenied(true);toast.error('Location access denied. Please allow location access or select manually.');}else if(error.code===error.TIMEOUT){toast.error('Location detection timed out. Please try again.');}else{toast.error('Unable to detect your location. Please select manually.');}}finally{setIsDetecting(false);}};// Find nearest district based on coordinates\nconst findNearestDistrict=async(latitude,longitude)=>{try{// Get all districts with coordinates\nconst response=await fetch('/api/districts');const result=await response.json();if(!result.success){throw new Error('Failed to fetch districts');}const districts=result.data.filter(d=>d.latitude&&d.longitude);if(districts.length===0){return null;}// Calculate distance to each district and find the nearest one\nlet nearestDistrict=null;let minDistance=Infinity;districts.forEach(district=>{const distance=calculateDistance(latitude,longitude,district.latitude,district.longitude);if(distance<minDistance){minDistance=distance;nearestDistrict=district;}});return nearestDistrict;}catch(error){console.error('Error finding nearest district:',error);return null;}};// Calculate distance between two coordinates using Haversine formula\nconst calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// Radius of the Earth in kilometers\nconst dLat=(lat2-lat1)*Math.PI/180;const dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;};// Clear detected location\nconst clearLocation=()=>{setUserLocation(null);setDetectedDistrict(null);setPermissionDenied(false);};// Check if location is available on component mount\nuseEffect(()=>{// Check if geolocation is available\nif(navigator.geolocation){var _navigator$permission;// Check if we have permission\n(_navigator$permission=navigator.permissions)===null||_navigator$permission===void 0?void 0:_navigator$permission.query({name:'geolocation'}).then(result=>{if(result.state==='granted'){// Auto-detect location if permission is already granted\ndetectLocation();}}).catch(()=>{// Permissions API not supported, do nothing\n});}},[]);const value={userLocation,detectedDistrict,isDetecting,permissionDenied,detectLocation,clearLocation,findNearestDistrict};return/*#__PURE__*/_jsx(LocationContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsx","_jsx","LocationContext","useLocation","context","Error","LocationProvider","_ref","children","userLocation","setUserLocation","detectedDistrict","setDetectedDistrict","isDetecting","setIsDetecting","permissionDenied","setPermissionDenied","detectLocation","navigator","geolocation","error","position","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","latitude","longitude","coords","district","findNearestDistrict","success","concat","district_name","state_name","console","code","PERMISSION_DENIED","TIMEOUT","response","fetch","result","json","districts","data","filter","d","length","nearestDistrict","minDistance","Infinity","forEach","distance","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","clearLocation","_navigator$permission","permissions","query","name","then","state","catch","value","Provider"],"sources":["D:/Bharat Fellowship/client/src/context/LocationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst LocationContext = createContext();\r\n\r\nexport const useLocation = () => {\r\n  const context = useContext(LocationContext);\r\n  if (!context) {\r\n    throw new Error('useLocation must be used within a LocationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LocationProvider = ({ children }) => {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n  const [detectedDistrict, setDetectedDistrict] = useState(null);\r\n  const [isDetecting, setIsDetecting] = useState(false);\r\n  const [permissionDenied, setPermissionDenied] = useState(false);\r\n\r\n  // Detect user's location and find district\r\n  const detectLocation = async () => {\r\n    if (!navigator.geolocation) {\r\n      toast.error('Geolocation is not supported by this browser');\r\n      return;\r\n    }\r\n\r\n    setIsDetecting(true);\r\n    setPermissionDenied(false);\r\n\r\n    try {\r\n      const position = await new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: true,\r\n          timeout: 10000,\r\n          maximumAge: 300000 // 5 minutes\r\n        });\r\n      });\r\n\r\n      const { latitude, longitude } = position.coords;\r\n      setUserLocation({ latitude, longitude });\r\n\r\n      // Find the nearest district\r\n      const district = await findNearestDistrict(latitude, longitude);\r\n      if (district) {\r\n        setDetectedDistrict(district);\r\n        toast.success(`Detected your location: ${district.district_name}, ${district.state_name}`);\r\n      } else {\r\n        toast.error('Could not determine your district from location');\r\n      }\r\n    } catch (error) {\r\n      console.error('Location detection error:', error);\r\n      \r\n      if (error.code === error.PERMISSION_DENIED) {\r\n        setPermissionDenied(true);\r\n        toast.error('Location access denied. Please allow location access or select manually.');\r\n      } else if (error.code === error.TIMEOUT) {\r\n        toast.error('Location detection timed out. Please try again.');\r\n      } else {\r\n        toast.error('Unable to detect your location. Please select manually.');\r\n      }\r\n    } finally {\r\n      setIsDetecting(false);\r\n    }\r\n  };\r\n\r\n  // Find nearest district based on coordinates\r\n  const findNearestDistrict = async (latitude, longitude) => {\r\n    try {\r\n      // Get all districts with coordinates\r\n      const response = await fetch('/api/districts');\r\n      const result = await response.json();\r\n      \r\n      if (!result.success) {\r\n        throw new Error('Failed to fetch districts');\r\n      }\r\n\r\n      const districts = result.data.filter(d => d.latitude && d.longitude);\r\n      \r\n      if (districts.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      // Calculate distance to each district and find the nearest one\r\n      let nearestDistrict = null;\r\n      let minDistance = Infinity;\r\n\r\n      districts.forEach(district => {\r\n        const distance = calculateDistance(\r\n          latitude,\r\n          longitude,\r\n          district.latitude,\r\n          district.longitude\r\n        );\r\n        \r\n        if (distance < minDistance) {\r\n          minDistance = distance;\r\n          nearestDistrict = district;\r\n        }\r\n      });\r\n\r\n      return nearestDistrict;\r\n    } catch (error) {\r\n      console.error('Error finding nearest district:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Calculate distance between two coordinates using Haversine formula\r\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    const R = 6371; // Radius of the Earth in kilometers\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLon = (lon2 - lon1) * Math.PI / 180;\r\n    const a = \r\n      Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \r\n      Math.sin(dLon/2) * Math.sin(dLon/2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return R * c;\r\n  };\r\n\r\n  // Clear detected location\r\n  const clearLocation = () => {\r\n    setUserLocation(null);\r\n    setDetectedDistrict(null);\r\n    setPermissionDenied(false);\r\n  };\r\n\r\n  // Check if location is available on component mount\r\n  useEffect(() => {\r\n    // Check if geolocation is available\r\n    if (navigator.geolocation) {\r\n      // Check if we have permission\r\n      navigator.permissions?.query({ name: 'geolocation' }).then(result => {\r\n        if (result.state === 'granted') {\r\n          // Auto-detect location if permission is already granted\r\n          detectLocation();\r\n        }\r\n      }).catch(() => {\r\n        // Permissions API not supported, do nothing\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    userLocation,\r\n    detectedDistrict,\r\n    isDetecting,\r\n    permissionDenied,\r\n    detectLocation,\r\n    clearLocation,\r\n    findNearestDistrict\r\n  };\r\n\r\n  return (\r\n    <LocationContext.Provider value={value}>\r\n      {children}\r\n    </LocationContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}